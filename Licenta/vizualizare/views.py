from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth import authenticate, login, logout
from django.contrib import messages
from .admin import CursuriAdmin, Cursuri, Note, Students, Optionale
from django.contrib.auth.forms import UserCreationForm
from .forms import Pachet1, Pachet2, Pachet3, Pachet4, Pachet5, Pachet6, Pachet7
from django.db.models import Q
from django.contrib.auth.decorators import login_required

# Create your views here.

def index(request):
    return render(request,"vizualizare/index.html")


def confirm_subject_relation(request):
    new_title = request.POST.get("new_name")
    old_title = request.POST.get("old_name")
    nume_buton1= request.POST.get("No")
    nume_buton2= request.POST.get("Yes")
    print("nume_nou", new_title)
    print("Nume buton1", nume_buton1)
    print("Nume buton2", nume_buton2)
    course = get_object_or_404(Cursuri, titlu_curs=new_title)
    print("course", course)
    if nume_buton1 == "No, it is not related":
        students = Students.objects.filter(an=course.an)
        note_objects = Note.objects.filter(nr_matricol__in=students.values_list('nr_matricol', flat=True), id_curs=course.id_curs)
        note_objects.delete()

    return redirect('/admin')


@login_required
def optional1(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet1(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=1)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=1)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=23)|Q(id_curs=24)|Q(id_curs=25)|Q(id_curs=26)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=1
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare1(nr_matricol, preference1, preference2, preference3, preference4, 1)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=1
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare1(nr_matricol, preference1, preference2, preference3, preference4, 1)
            return redirect('starting-page')
    else:
        form = Pachet1()
        return render(request, "vizualizare/optionale1.html",context={
            "form": form
        })


@login_required
def optional2(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet2(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=2)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=2)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=33)|Q(id_curs=34)|Q(id_curs=35)|Q(id_curs=36)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=2
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare2(nr_matricol, preference1, preference2, preference3, preference4, 2)
                # elif preference1 == optiuni.optiunea1 and preference2 == optiuni.optiunea2 and preference3 == optiuni.optiunea3 and preference4 == optiuni.optiunea4:
                #     note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=33)|Q(id_curs=34)|Q(id_curs=35)|Q(id_curs=36)))
                #     optiuni.delete()
                #     note.delete()
                #     preferinta=Optionale()
                #     preferinta.nr_matricol=nr_matricol
                #     preferinta.pachet=2
                #     preferinta.optiunea1=preference1
                #     preferinta.optiunea2=preference2
                #     preferinta.optiunea3=preference3
                #     preferinta.optiunea4=preference4
                #     preferinta.save()
                #     repartizare2(nr_matricol, preference1, preference2, preference3, preference4, 2)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=2
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare2(nr_matricol, preference1, preference2, preference3, preference4, 2)
            return redirect('starting-page')
    else:
        form = Pachet2()
        return render(request, "vizualizare/optionale2.html",context={
            "form": form
        })


@login_required
def optional3(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet3(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=3)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=3)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=41)|Q(id_curs=42)|Q(id_curs=43)|Q(id_curs=44)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=3
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare3(nr_matricol, preference1, preference2, preference3, preference4, 3)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=3
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare3(nr_matricol, preference1, preference2, preference3, preference4, 3)
            return redirect('starting-page')
    else:
        form = Pachet3()
        return render(request, "vizualizare/optionale3.html",context={
            "form": form
        })
    

@login_required
def optional4(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet4(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=4)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=4)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=46)|Q(id_curs=47)|Q(id_curs=48)|Q(id_curs=49)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=4
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare4(nr_matricol, preference1, preference2, preference3, preference4, 4)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=4
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare4(nr_matricol, preference1, preference2, preference3, preference4, 4)
            return redirect('starting-page')
    else:
        form = Pachet4()
        return render(request, "vizualizare/optionale4.html",context={
            "form": form
        })
    

@login_required
def optional5(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet5(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=5)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=5)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=55)|Q(id_curs=56)|Q(id_curs=57)|Q(id_curs=58)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=5
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare5(nr_matricol, preference1, preference2, preference3, preference4, 5)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=5
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare5(nr_matricol, preference1, preference2, preference3, preference4, 5)
            return redirect('starting-page')
    else:
        form = Pachet5()
        return render(request, "vizualizare/optionale5.html",context={
            "form": form
        })
    

@login_required
def optional6(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet6(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=6)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=6)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=59)|Q(id_curs=60)|Q(id_curs=61)|Q(id_curs=62)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=6
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare6(nr_matricol, preference1, preference2, preference3, preference4, 6)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=6
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare6(nr_matricol, preference1, preference2, preference3, preference4, 6)
            return redirect('starting-page')
    else:
        form = Pachet6()
        return render(request, "vizualizare/optionale6.html",context={
            "form": form
        })
    

@login_required
def optional7(request):
    # if request.user.is_authenticated:
    #     return redirect("starting-page")
    if request.method == "POST":
        form = Pachet7(request.POST)
        if form.is_valid():
            preference1 = form.cleaned_data["preference1"]
            preference2 = form.cleaned_data["preference2"]
            preference3 = form.cleaned_data["preference3"]
            preference4 = form.cleaned_data["preference4"]
            # print(preference1)
            # print(preference2)
            # print(preference3)
            # print(preference4)
            nr_matricol=request.user.nr_matricol
            if Optionale.objects.filter(Q(nr_matricol=nr_matricol) & Q(pachet=7)):
                optiuni=Optionale.objects.get(nr_matricol=nr_matricol, pachet=7)
                if preference1 != optiuni.optiunea1 or preference2 != optiuni.optiunea2 or preference3 != optiuni.optiunea3 or preference4 != optiuni.optiunea4:
                    note = Note.objects.filter(Q(nr_matricol=nr_matricol) & (Q(id_curs=41)|Q(id_curs=42)|Q(id_curs=43)|Q(id_curs=44)))
                    optiuni.delete()
                    note.delete()
                    preferinta=Optionale()
                    preferinta.nr_matricol=nr_matricol
                    preferinta.pachet=7
                    preferinta.optiunea1=preference1
                    preferinta.optiunea2=preference2
                    preferinta.optiunea3=preference3
                    preferinta.optiunea4=preference4
                    preferinta.save()
                    repartizare7(nr_matricol, preference1, preference2, preference3, preference4, 7)
            else:
                preferinta=Optionale()
                preferinta.nr_matricol=nr_matricol
                preferinta.pachet=7
                preferinta.optiunea1=preference1
                preferinta.optiunea2=preference2
                preferinta.optiunea3=preference3
                preferinta.optiunea4=preference4
                preferinta.save()
                repartizare7(nr_matricol, preference1, preference2, preference3, preference4, 7)
            return redirect('starting-page')
    else:
        form = Pachet7()
        return render(request, "vizualizare/optionale7.html",context={
            "form": form
        })


def repartizare1(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Calculabilitate, decidabilitate şi complexitate":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                nota_de_sters.delete()
                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Principii ale limbajelor de programare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Algoritmi genetici":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Algoritmi genetici":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Algoritmi genetici":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Principii ale limbajelor de programare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Principii ale limbajelor de programare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Quantum Computing":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Principii ale limbajelor de programare":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                                nota_de_sters.delete()
                                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Algoritmi genetici":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                                        nota_de_sters.delete()
                                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Algoritmi genetici":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                                nota_de_sters.delete()
                                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Principii ale limbajelor de programare":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                                        nota_de_sters.delete()
                                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Principii ale limbajelor de programare":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                nota_de_sters.delete()
                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Calculabilitate, decidabilitate şi complexitate":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Algoritmi genetici":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Algoritmi genetici":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Algoritmi genetici":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Quantum Computing":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                                nota_de_sters.delete()
                                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Algoritmi genetici":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                                        nota_de_sters.delete()
                                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Algoritmi genetici":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                                nota_de_sters.delete()
                                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                                        nota_de_sters.delete()
                                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Algoritmi genetici":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                nota_de_sters.delete()
                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Calculabilitate, decidabilitate şi complexitate":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Principii ale limbajelor de programare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Principii ale limbajelor de programare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Principii ale limbajelor de programare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Quantum Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Quantum Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Quantum Computing ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Principii ale limbajelor de programare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Principii ale limbajelor de programare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Quantum Computing ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=26)
                nota_de_sters.delete()
                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Calculabilitate, decidabilitate şi complexitate":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Principii ale limbajelor de programare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Algoritmi genetici":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Algoritmi genetici":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Principii ale limbajelor de programare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Principii ale limbajelor de programare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Algoritmi genetici":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Algoritmi genetici":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Algoritmi genetici ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=25)
                        nota_de_sters.delete()
                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Calculabilitate, decidabilitate şi complexitate":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=23)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Principii ale limbajelor de programare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Principii ale limbajelor de programare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=24)
                                nota_de_sters.delete()
                                repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Calculabilitate, decidabilitate şi complexitate":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=12).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=12).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=23)
                                        nota_de_sters.delete()
                                        repartizare1(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    

def repartizare2(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Programare funcţională":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                nota_de_sters.delete()
                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Introducere în criptografie":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Antreprenoriat și inovare în IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Antreprenoriat și inovare în IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Antreprenoriat și inovare în IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în criptografie":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în criptografie":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Sisteme embedded":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Introducere în criptografie":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                                nota_de_sters.delete()
                                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Antreprenoriat și inovare în IT":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                                        nota_de_sters.delete()
                                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Antreprenoriat și inovare în IT":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                                nota_de_sters.delete()
                                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Introducere în criptografie":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                                        nota_de_sters.delete()
                                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Introducere în criptografie":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                nota_de_sters.delete()
                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare funcţională":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Antreprenoriat și inovare în IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Antreprenoriat și inovare în IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Antreprenoriat și inovare în IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Sisteme embedded":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Antreprenoriat și inovare în IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Antreprenoriat și inovare în IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Antreprenoriat și inovare în IT":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                nota_de_sters.delete()
                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare funcţională":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în criptografie":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în criptografie":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în criptografie":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Sisteme embedded":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Sisteme embedded":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Sisteme embedded ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în criptografie":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în criptografie":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Sisteme embedded ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=36)
                nota_de_sters.delete()
                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare funcţională":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în criptografie":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Antreprenoriat și inovare în IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Antreprenoriat și inovare în IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în criptografie":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în criptografie":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Antreprenoriat și inovare în IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Antreprenoriat și inovare în IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Antreprenoriat și inovare în IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=19).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=19).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=35)
                        nota_de_sters.delete()
                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare funcţională":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=33)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în criptografie":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în criptografie":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=34)
                                nota_de_sters.delete()
                                repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare funcţională":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=21).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=21).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=33)
                                        nota_de_sters.delete()
                                        repartizare2(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    

def repartizare3(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Introducere în .NET":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                nota_de_sters.delete()
                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Rețele neuronale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Rețele neuronale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Rețele neuronale":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                                nota_de_sters.delete()
                                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Rețele neuronale":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                                        nota_de_sters.delete()
                                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Rețele neuronale":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                                nota_de_sters.delete()
                                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                                        nota_de_sters.delete()
                                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                nota_de_sters.delete()
                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Introducere în .NET":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Rețele neuronale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Rețele neuronale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Rețele neuronale":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Rețele neuronale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Rețele neuronale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Rețele neuronale":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                nota_de_sters.delete()
                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Introducere în .NET":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Animaţie 3D: algoritmi şi tehnici fundamentale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Animaţie 3D: algoritmi şi tehnici fundamentale ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Animaţie 3D: algoritmi şi tehnici fundamentale ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=27).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=27).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=44)
                nota_de_sters.delete()
                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Introducere în .NET":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Rețele neuronale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Rețele neuronale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Rețele neuronale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Rețele neuronale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Rețele neuronale":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=43)
                        nota_de_sters.delete()
                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în .NET":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=41)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Dezvoltarea sistemelor fizice utilizând microprocesoare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=13).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=13).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=42)
                                nota_de_sters.delete()
                                repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în .NET":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=41)
                                        nota_de_sters.delete()
                                        repartizare3(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    

def repartizare4(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Programare și modelare probabilistă":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                nota_de_sters.delete()
                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Introducere în realitatea mixtă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Capitole speciale de sisteme de operare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Capitole speciale de sisteme de operare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Capitole speciale de sisteme de operare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în realitatea mixtă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în realitatea mixtă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Tehnici de programare multiprocesor":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Introducere în realitatea mixtă":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                                nota_de_sters.delete()
                                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Capitole speciale de sisteme de operare":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                                        nota_de_sters.delete()
                                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Capitole speciale de sisteme de operare":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                                nota_de_sters.delete()
                                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Introducere în realitatea mixtă":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                                        nota_de_sters.delete()
                                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Introducere în realitatea mixtă":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                nota_de_sters.delete()
                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare și modelare probabilistă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Capitole speciale de sisteme de operare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Capitole speciale de sisteme de operare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Capitole speciale de sisteme de operare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Tehnici de programare multiprocesor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Capitole speciale de sisteme de operare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Capitole speciale de sisteme de operare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Capitole speciale de sisteme de operare":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                nota_de_sters.delete()
                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare și modelare probabilistă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în realitatea mixtă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în realitatea mixtă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în realitatea mixtă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare multiprocesor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare multiprocesor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Tehnici de programare multiprocesor ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în realitatea mixtă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în realitatea mixtă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Tehnici de programare multiprocesor ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=49)
                nota_de_sters.delete()
                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare și modelare probabilistă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Introducere în realitatea mixtă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Capitole speciale de sisteme de operare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Capitole speciale de sisteme de operare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în realitatea mixtă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în realitatea mixtă":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Capitole speciale de sisteme de operare":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Capitole speciale de sisteme de operare":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Capitole speciale de sisteme de operare":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=48)
                        nota_de_sters.delete()
                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare și modelare probabilistă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=46)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în realitatea mixtă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în realitatea mixtă":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=47)
                                nota_de_sters.delete()
                                repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare și modelare probabilistă":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=17).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=17).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=46)
                                        nota_de_sters.delete()
                                        repartizare4(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                                                        

def repartizare5(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Programare bazată pe reguli":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                nota_de_sters.delete()
                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Tehnici de programare pe platforme mobile":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Aspecte computaţionale în teoria numerelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Tehnici de programare pe platforme mobile":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Proiectarea jocurilor":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Tehnici de programare pe platforme mobile":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                                nota_de_sters.delete()
                                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                                        nota_de_sters.delete()
                                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                                nota_de_sters.delete()
                                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                                        nota_de_sters.delete()
                                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Tehnici de programare pe platforme mobile":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                nota_de_sters.delete()
                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare bazată pe reguli":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Aspecte computaţionale în teoria numerelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Proiectarea jocurilor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Aspecte computaţionale în teoria numerelor":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                nota_de_sters.delete()
                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare bazată pe reguli":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Tehnici de programare pe platforme mobile":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Tehnici de programare pe platforme mobile":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Proiectarea jocurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Proiectarea jocurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Proiectarea jocurilor ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare pe platforme mobile":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Proiectarea jocurilor ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=58)
                nota_de_sters.delete()
                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Programare bazată pe reguli":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Tehnici de programare pe platforme mobile":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Tehnici de programare pe platforme mobile":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Aspecte computaţionale în teoria numerelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Aspecte computaţionale în teoria numerelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Aspecte computaţionale în teoria numerelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=18).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=18).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=57)
                        nota_de_sters.delete()
                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Programare bazată pe reguli":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=55)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Tehnici de programare pe platforme mobile":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Tehnici de programare pe platforme mobile":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=37).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=37).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=56)
                                nota_de_sters.delete()
                                repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Programare bazată pe reguli":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=55)
                                        nota_de_sters.delete()
                                        repartizare5(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)


def repartizare6(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Psihologia comunicării profesionale în domeniul IT":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                nota_de_sters.delete()
                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Cloud Computing":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Interacțiune om-calculator":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Interacțiune om-calculator":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Interacțiune om-calculator":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Cloud Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Cloud Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Analiza reţelelor media sociale":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Cloud Computing":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                                nota_de_sters.delete()
                                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Interacțiune om-calculator":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                                        nota_de_sters.delete()
                                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Interacțiune om-calculator":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                                nota_de_sters.delete()
                                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Cloud Computing":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                                        nota_de_sters.delete()
                                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Cloud Computing":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                nota_de_sters.delete()
                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Psihologia comunicării profesionale în domeniul IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Interacțiune om-calculator":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Interacțiune om-calculator":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Interacțiune om-calculator":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Analiza reţelelor media sociale":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Interacțiune om-calculator":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Interacțiune om-calculator":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Interacțiune om-calculator":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                nota_de_sters.delete()
                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Psihologia comunicării profesionale în domeniul IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Cloud Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Cloud Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Cloud Computing":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Analiza reţelelor media sociale":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Analiza reţelelor media sociale":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Analiza reţelelor media sociale ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Cloud Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Cloud Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Analiza reţelelor media sociale ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=62)
                nota_de_sters.delete()
                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Psihologia comunicării profesionale în domeniul IT":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Cloud Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Interacțiune om-calculator":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Interacțiune om-calculator":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Cloud Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Cloud Computing":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Interacțiune om-calculator":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Interacțiune om-calculator":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Interacțiune om-calculator":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=61)
                        nota_de_sters.delete()
                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Psihologia comunicării profesionale în domeniul IT":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=59)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Cloud Computing":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Cloud Computing":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=60)
                                nota_de_sters.delete()
                                repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Psihologia comunicării profesionale în domeniul IT":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=15).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=15).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=59)
                                        nota_de_sters.delete()
                                        repartizare6(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)


def repartizare7(nr_matricol, preference1, preference2, preference3, preference4, pachet):
    note=Note()
    an=Students.objects.get(nr_matricol=nr_matricol).an
    studenti_an_curent=Students.objects.filter(an=an)
    nr_studenti_an_curent=len(studenti_an_curent)
    print(preference1)
    id_preference1=Cursuri.objects.get(titlu_curs=preference1).id_curs
    print("Nr studenti an curent", nr_studenti_an_curent)
    print("Nr studenti an curent/4", nr_studenti_an_curent/4)
    print("Nr studenti an curent/4+1", (nr_studenti_an_curent/4) + 1)
    nr_studenti_optional1=Note.objects.filter(id_curs=id_preference1)
    print("nr_studenti_optional1",len(nr_studenti_optional1))
    if len(nr_studenti_optional1)<=nr_studenti_an_curent/4 :
        note.nr_matricol=nr_matricol
        note.id_curs=id_preference1
        note.save()
        return
    elif preference1 == "Reţele Petri şi aplicaţii":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                nota_de_sters.delete()
                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Smart Card-uri şi Aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Inginerie software specifică automobilelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Inginerie software specifică automobilelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Inginerie software specifică automobilelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în Internetul lucrurilor":
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional2:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference2
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                    if  nota_materie_student <= min_nota_student_repartizat:
                                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                            note.nr_matricol=nr_matricol
                                            note.id_curs=id_preference3
                                            note.save()
                                            return
                                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                                nota_de_sters.delete()
                                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Inginerie software specifică automobilelor":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                                        nota_de_sters.delete()
                                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                        elif preference3 == "Inginerie software specifică automobilelor":
                                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()
                                                return
                                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                            min_nota_student_repartizat=10
                                            for studenti in nr_studenti_optional3:
                                                nr_matricol_student = studenti.nr_matricol
                                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                    nr_matricol_student_contestat = nr_matricol_student
                                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                                            if nota_materie_student > min_nota_student_repartizat:
                                                note.nr_matricol=nr_matricol
                                                note.id_curs=id_preference3
                                                note.save()     
                                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                                nota_de_sters.delete()
                                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                            elif nota_materie_student <= min_nota_student_repartizat:
                                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                                    note.nr_matricol=nr_matricol
                                                    note.id_curs=id_preference3
                                                    note.save()
                                                    return
                                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()
                                                        return
                                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                                    min_nota_student_repartizat=10
                                                    for studenti in nr_studenti_optional4:
                                                        nr_matricol_student = studenti.nr_matricol
                                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                                            nr_matricol_student_contestat = nr_matricol_student
                                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                                    if nota_materie_student > min_nota_student_repartizat:
                                                        note.nr_matricol=nr_matricol
                                                        note.id_curs=id_preference4
                                                        note.save()     
                                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                                        nota_de_sters.delete()
                                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)    
    elif preference1 == "Smart Card-uri şi Aplicaţii":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                nota_de_sters.delete()
                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Reţele Petri şi aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Inginerie software specifică automobilelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Inginerie software specifică automobilelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Inginerie software specifică automobilelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în Internetul lucrurilor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Inginerie software specifică automobilelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Inginerie software specifică automobilelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Inginerie software specifică automobilelor":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                nota_de_sters.delete()
                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Reţele Petri şi aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Smart Card-uri şi Aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Introducere în Internetul lucrurilor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Introducere în Internetul lucrurilor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Introducere în Internetul lucrurilor ":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
    elif preference1 == "Introducere în Internetul lucrurilor ":
            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=39).valoare
            min_nota_student_repartizat=10
            for studenti in nr_studenti_optional1:
                nr_matricol_student = studenti.nr_matricol
                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=39).valoare
                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                    nr_matricol_student_contestat = nr_matricol_student
                    min_nota_student_repartizat=nota_materie_student_repartizat   
            if nota_materie_student > min_nota_student_repartizat:
                note.nr_matricol=nr_matricol
                note.id_curs=id_preference1
                note.save()     
                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=66)
                nota_de_sters.delete()
                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
            if  nota_materie_student <= min_nota_student_repartizat:
                id_preference2=Cursuri.objects.get(titlu_curs=preference2).id_curs
                nr_studenti_optional2=Note.objects.filter(id_curs=id_preference2)
                if len(nr_studenti_optional2)<= nr_studenti_an_curent/4:
                    note.nr_matricol=nr_matricol
                    note.id_curs=id_preference2
                    note.save()
                    return
                elif preference2 == "Reţele Petri şi aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<= nr_studenti_an_curent/4:
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Inginerie software specifică automobilelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Inginerie software specifică automobilelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional4=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Smart Card-uri şi Aplicaţii":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Inginerie software specifică automobilelor":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Inginerie software specifică automobilelor":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                elif preference2 == "Inginerie software specifică automobilelor":
                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=20).valoare
                    min_nota_student_repartizat=10
                    for studenti in nr_studenti_optional2:
                        nr_matricol_student = studenti.nr_matricol
                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=20).valoare
                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                            nr_matricol_student_contestat = nr_matricol_student
                            min_nota_student_repartizat=nota_materie_student_repartizat   
                    if nota_materie_student > min_nota_student_repartizat:
                        note.nr_matricol=nr_matricol
                        note.id_curs=id_preference2
                        note.save()     
                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=65)
                        nota_de_sters.delete()
                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                    if  nota_materie_student <= min_nota_student_repartizat:
                        id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                        nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                        if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                            note.nr_matricol=nr_matricol
                            note.id_curs=id_preference3
                            note.save()
                            return
                        elif preference3 == "Reţele Petri şi aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4  :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=63)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Smart Card-uri şi Aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                        elif preference3 == "Smart Card-uri şi Aplicaţii":
                            id_preference3=Cursuri.objects.get(titlu_curs=preference3).id_curs
                            nr_studenti_optional3=Note.objects.filter(id_curs=id_preference3)
                            if len(nr_studenti_optional3)<=nr_studenti_an_curent/4 :
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()
                                return
                            nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=38).valoare
                            min_nota_student_repartizat=10
                            for studenti in nr_studenti_optional3:
                                nr_matricol_student = studenti.nr_matricol
                                nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=38).valoare
                                if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                    nr_matricol_student_contestat = nr_matricol_student
                                    min_nota_student_repartizat=nota_materie_student_repartizat   
                            if nota_materie_student > min_nota_student_repartizat:
                                note.nr_matricol=nr_matricol
                                note.id_curs=id_preference3
                                note.save()     
                                preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat, id_curs=64)
                                nota_de_sters.delete()
                                repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                            elif nota_materie_student <= min_nota_student_repartizat:
                                id_preference4=Cursuri.objects.get(titlu_curs=preference4).id_curs
                                nr_studenti_optional3=Note.objects.filter(id_curs=id_preference4)
                                if len(nr_studenti_optional4)<=nr_studenti_an_curent/4 :
                                    note.nr_matricol=nr_matricol
                                    note.id_curs=id_preference3
                                    note.save()
                                    return
                                elif preference4 == "Reţele Petri şi aplicaţii":
                                    id_preference4=Cursuri.objects.get(titlu_curs=preference3).id_curs
                                    nr_studenti_optional4=Note.objects.filter(id_curs=id_preference3)
                                    if len(nr_studenti_optional4)<=nr_studenti_an_curent/4  :
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()
                                        return
                                    nota_materie_student=Note.objects.get(nr_matricol=nr_matricol,id_curs=28).valoare
                                    min_nota_student_repartizat=10
                                    for studenti in nr_studenti_optional4:
                                        nr_matricol_student = studenti.nr_matricol
                                        nota_materie_student_repartizat = Note.objects.get(nr_matricol=nr_matricol_student,id_curs=28).valoare
                                        if min_nota_student_repartizat >= nota_materie_student_repartizat:
                                            nr_matricol_student_contestat = nr_matricol_student
                                            min_nota_student_repartizat=nota_materie_student_repartizat   
                                    if nota_materie_student > min_nota_student_repartizat:
                                        note.nr_matricol=nr_matricol
                                        note.id_curs=id_preference4
                                        note.save()     
                                        preferinta_student_mutat=Optionale.objects.get(nr_matricol=nr_matricol_student_contestat,pachet=pachet)
                                        nota_de_sters=Note.objects.get(nr_matricol=nr_matricol_student_contestat,id_curs=63)
                                        nota_de_sters.delete()
                                        repartizare7(nr_matricol_student_contestat, preferinta_student_mutat.optiunea1, preferinta_student_mutat.optiunea2, preferinta_student_mutat.optiunea3, preferinta_student_mutat.optiunea4, pachet)
                                                         